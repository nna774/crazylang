(html (@lang "ja") (* This document is translated from S-exp by HtSExp( https://github.com/nna774/htsexp ). See original file *.htsexp. *)
    (head
        (title "難解プログラミング勉強会 〜 Lazy K 編 (第KI回) 〜")
        
        (meta (@charset "utf-8"))
        (meta (@name "apple-mobile-web-app-capable") (@content "yes"))
        (meta (@name "apple-mobile-web-app-status-bar-style") (@content "black-translucent"))
        (meta (@name "viewport") (@content "width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"))
        
        (link (@rel "stylesheet") (@href "css/reveal.css"))
        (link (@rel "stylesheet") (@href "css/theme/default.css") (@id "theme"))

        (script
            "document.write( '<link rel=\"stylesheet\" href=\"css/print/' + ( window.location.search.match( /print-pdf/gi ) ? 'pdf' : 'paper' ) + '.css\" type=\"text/css\" media=\"print\">' );"
        )
        
        (style (@type "text/css") 
            (* 
                .red{ color: red; }
                .green{ color: green; }
                .in{ color: red; }
                .out{ color: green; }
            *)
        )
    )

    (body
        (div (@class "reveal")
        (div (@class "slides")
            (section
                (h1 "難解プログラミング勉強会")
                (h2 "〜 Lazy K 編 (第KI回) 〜")
                (h6 "KMC 1回 nona7")
            )
            (section
                (h3 "ぜろから始めるLazy K")
                (ul
                    (li "Lazy K をぜろからやっていきます")
                    (li "どれぐらいがぜろなんだろう")
                    (li "どれぐらい今日できるのだろう")
                    (li "gdgd になっちゃったらごめんなさい")
                )
            )
            (section
                (p
                    (h3 "突然ですがラムダ計算の話をします")
                    (small "避けては通れなさそう")
                    (br)
                    "ゆるふわ説明なします"
                    (br)
                    "細かいところは私もゆるふわ勢なので許して……"
                    (br)
                    "直感的！ 直感的な説明を……"
                    (br)
                    (small "斧を置いてっ……！")
                )
            )
            (section
                (l3 "ラムダ計算とは")
            )
            (section
                (p
                    (l4 "導入された理由")
                    (br)
                    "\"関数\"を一般的に扱いたい"
                )
            )
            (section
                (p
                    (h4 "じゃあ関数ってなんだ？")
                    (br)
                    (ul
                        (li "謎のブラックボックス")
                        (li "引数(入力) がいくつかあって, 返り値(出力) のあるもの")
                        (li (small
                                (span
                                    "\"副作用\"のある関数は今は置いときます"
                                    (br)
                                    "副作用ってなんだよ"
                                    (br)
                                    "後でやります……"
                                )
                            )
                        )
                    )
                )
            )
            (section
                (p
                    "普通の関数"
                    (br)
                    (pre (code "f(" (span (@class "in") "x") ") = " (span (@class "out") "x + 2")))
                    
                )
                (p
                    "ラムダ記法"
                    (br)
                    (pre (code "λ" (span (@class "in") "x") ". " (span (@class "out") "x + 2")))
                )
                "赤が入力, 緑が出力" (* あんまよくない書き方だ *)
            )
            (section
                (h4 "代入はこんな感じ")
                (p
                    "普通の関数"
                    (br)
                    (pre (code "f(" (span (@class "in") "42") ") = " (span (@class "out") "42 + 2") " = 44"))
                    
                )
                (p
                    "ラムダ記法"
                    (br)
                    (pre (code "(λ" (span (@class "in") "x") ". " (span (@class "out") "x + 2") ") 42 = 42 + 2 = 44"))
                    "\"λ(変数名).\" の変数名を, ピリオドの後ろから探してきて, そこを引数で置き換える"
                )
            )
            (section
                (section
                    "わかりづらいですね, いくつか例を行きましょう"
                )
                (section
                    "(λx. x) 42 = ？"
                )
                (section
                    "42"
                )
                (section
                    "(λx. (λy. x * y)) 42 = ？"
                )
                (section
                    "(λy. 42 * y)"
                )
                (section
                    "(λy. 42 * y) 63"
                )
                (section
                    "42 * 63 = 2646"
                )
                (section
                    "(λx. (λy. x * y)) 42 63 = ？"
                )
                (section
                    "42 * 63 = 2646"
                    (br)
                    "これいいですか"
                    (br)
                    "一気に適用(代入を適用)できる"
                )
            )
            (section
                (h4 "そんなふうに書いて何がうれしいんですか")
                (br)
                "今f って名前が元の関数にはついてました."
                (br)
                "ラムダ記法ではどっかいってる."
                (br)
                "2 をたす為の関数に名前いらない(今回は)"
                (br)
                "いちいち名前つける必要がない"
            )
            (section
                (h4 "他の利点")
                "関数に関数を渡したり, 関数が関数を返したりできる"
            )
            (section
                (h4 "何を言っとるんや")
                "例えば,"
                (br)
                "2引数を取って, 常に一つ目の値を返す関数"
                (br)
                (small "Lazy K のK関数です")
            )
            (section
                (p
                    (pre (code "k(x,y) = x"))
                    (br)
                    "なんかそれっぽい"
                )
            )
            (section
                "でもちょっと不便"
                (br)
                (pre (code "k_2(y) = 42"))
                (br)
                "kとめっちゃ似てるのにいい感じにできない"
                (br)
                (pre (code "k(42,y) = 42"))
                (br)
                "これは関数って言っていいのか"
                (br)
                (small "なんか気持ち悪い")
            )
            (section
                "ラムダ式で書くと"
                (br)
                (pre (code "λx. (λy. x)"))
                (br)
                "省略記法として"
                (br)
                (pre (code "λxy. x"))
                "とも書く"
            )
            (section
                (pre (code "λxy. x"))
                "これって2引数の関数っぽいですよね"
                (br)
                "もちろんそれは正しいです"
                (br)
                "でも,"
            )
            (section
                "一つ適用してみる"
                (br)
                (pre (code "(λxy. x) 3 = (λy. 3)"))
                (small "λxy. x は λx. λy. x の省略だということを思いだしてください")
                (br)
                "ひとつ引数を消費して1引数の関数になりました"
                (br)
                "「一つ引数を取って, 「1引数の関数」を返す関数」 とも見れる"
            )
            (section
                "さっきのk に1引数を与えたもの"
                (pre (code "k(42,y) = 42"))
                "これを"
                (pre (code "k(42)(y) = 42"))
                "こう変換したような感じ"
            )
            (section
                "適当な関数をラムダ記法で書くだけで自動的にいい感じに変換される"
                (br)
                (p
                    "一般化したらこんな感じ"
                    (br)
                    (pre (code "f(x_0, x_1, .. , x_n) -> f(x_0)(x_1)..(x_n)"))
                    "こんな感じの変換"
                )
                (p
                    "2引数の場合だけだと"
                    (br)
                    (pre (code "f(x,y) -> f(x)(y)"))
                    "へとかわる"
                )
            )
            (section
                (h4 "この変換は何が嬉しいのですか")
                "さっきみたいに, 2引数以上の関数に, ひとつだけ引数を渡したりできる"
                (br)
                (strong (@class "red") "\"部分適用\"") "という"
            )
            (section
                (p
                    (h4 "一応形式的な定義")
                    (br)
                    (ul
                        (li "<式> := <識別子>")
                        (li "<式> := (λ<識別子>. <式>)")
                        (li "<式> := (<式> <式>)")
                    )
                    (br)
                    "これでできるもののみが式である"
                )
                (p "あんまりどうでもいいです(暴言)")
            )
            (section
                (h2 "Lazy K")
                (h3 "これからの「Lazy K」の話をしよう")
                (h4 "今を生き延びるための参照透明")
            )
            (section
                
            )
            (*section
                "簡単なパズルと考えましょう."
                (br)
                "こんなのがラムダ式です"
                (ul
                    (li "λx. x")
                    (li "λxy. x")
                    (li "λw. w")
                    (li "λx. x x")
                )
                (br)
                "λxy. x はλx. λy. x の省略"
                (br)
                "1つ目と3つ目は同じラムダ式"
            *)
        )
        )

        (script (@src "lib/js/head.min.js"))
        (script (@src "js/reveal.min.js"))

        (script
            "Reveal.initialize({
                controls: true,
                progress: true,
                history: true,
                center: true,

                width : '90%',
                height : '90%'
             });"
        )
    )
)

